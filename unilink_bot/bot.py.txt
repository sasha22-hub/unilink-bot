import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command

TOKEN = "8314527247:AAEWOb4BNVkDSzA4Eukn7a7klGFsUX2kp1w"

bot = Bot(token=TOKEN)
dp = Dispatcher()

main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("üì¢ –û–±—ä—è–≤–ª–µ–Ω–∏—è"), KeyboardButton("üíº –î–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")],
        [KeyboardButton("üéÅ –°–∫–∏–¥–∫–∏"), KeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å")],
        [KeyboardButton("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ")]
    ],
    resize_keyboard=True
)

ads = []
discounts = [
    {"title": "–ö–æ—Ñ–µ–π–Ω—è ‚ÄúBeans‚Äù", "desc": "10% –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–º—É!"},
    {"title": "–ö–æ–ø–∏-—Ü–µ–Ω—Ç—Ä ‚ÄúPrint+‚Äù", "desc": "15% —Å–∫–∏–¥–∫–∞ –Ω–∞ –ø–µ—á–∞—Ç—å –¥–∏–ø–ª–æ–º–æ–≤."}
]

@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç üëã –≠—Ç–æ UniLink ‚Äî –∫–∞—Ä—Ç–∞ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏—Ö —Å–∫–∏–¥–æ–∫ –∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π!\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:",
        reply_markup=main_menu
    )

@dp.message(lambda m: m.text == "üì¢ –û–±—ä—è–≤–ª–µ–Ω–∏—è")
async def show_ads(message: types.Message):
    if not ads:
        await message.answer("–ü–æ–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç. –î–æ–±–∞–≤—å —Å–≤–æ—ë!")
    else:
        text = "\n\n".join([f"üìå {a['title']}\n{a['desc']}\n–ö–æ–Ω—Ç–∞–∫—Ç: {a['contact']}" for a in ads])
        await message.answer(text)

@dp.message(lambda m: m.text == "üíº –î–æ–±–∞–≤–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")
async def add_ad(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n–ù–∞–∑–≤–∞–Ω–∏–µ | –û–ø–∏—Å–∞–Ω–∏–µ | –ö–æ–Ω—Ç–∞–∫—Ç")

@dp.message(lambda m: "|" in m.text)
async def save_ad(message: types.Message):
    parts = message.text.split("|")
    if len(parts) == 3:
        ads.append({"title": parts[0].strip(), "desc": parts[1].strip(), "contact": parts[2].strip()})
        await message.answer("‚úÖ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
    else:
        await message.answer("‚ùå –§–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π. –ü—Ä–∏–º–µ—Ä: –ù–∞–∑–≤–∞–Ω–∏–µ | –û–ø–∏—Å–∞–Ω–∏–µ | –ö–æ–Ω—Ç–∞–∫—Ç")

@dp.message(lambda m: m.text == "üéÅ –°–∫–∏–¥–∫–∏")
async def show_discounts(message: types.Message):
    text = "\n\n".join([f"üéÅ {d['title']}\n{d['desc']}" for d in discounts])
    await message.answer(text)

@dp.message(lambda m: m.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def profile(message: types.Message):
    await message.answer(f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–≤–æ–∏—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏—è—Ö –∏ —Å–∫–∏–¥–∫–∞—Ö.")

@dp.message(lambda m: m.text == "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ")
async def about(message: types.Message):
    await message.answer(
        "üéì UniLink ‚Äî —Å–µ—Ä–≤–∏—Å –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ë—É–∑—É–ª—É–∫–∞.\n"
        "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –ø–æ–º–æ—â—å, –æ–±–º–µ–Ω—è—Ç—å—Å—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏ —É–∑–Ω–∞—Ç—å –æ —Å–∫–∏–¥–∫–∞—Ö –æ—Ç –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤."
    )

async def main():
    print("‚úÖ UniLink –∑–∞–ø—É—â–µ–Ω")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
